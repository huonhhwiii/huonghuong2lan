{"id":"4d514a81-5d17-47f6-847f-7e26ed3705a5","title":"Chuyển Dữ Liệu Cơ Sở Dữ Liệu","createdAt":1745765288898,"updatedAt":1745765295527,"isNameGenerated":true,"isRenamedByUser":false,"messages":[{"id":"c0a7b8a4-b66a-4074-9a24-13e0e5ecff14","role":"user","rawContent":{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"tôi muôn chuyển dữ liệu của CSDL QuanLyGiaSu (qtcsdl) sang csdl của nhakhoaso, trước bạn chuyển thầm của tôi"}]}]},"content":[{"type":"text","text":"tôi muôn chuyển dữ liệu của CSDL QuanLyGiaSu (qtcsdl) sang csdl của nhakhoaso, trước bạn chuyển thầm của tôi"}],"context":{"codebaseEnabled":true,"attachedFiles":[]},"createdAt":1745765288898,"isInternal":false},{"id":"d443290c-d21d-456f-a7c5-aa508124f4b5","role":"assistant","createdAt":1745765295516,"content":[{"type":"text","text":"Tôi hiểu rằng bạn muốn chuyển dữ liệu từ cơ sở dữ liệu QuanLyGiaSu (qtcsdl) sang cơ sở dữ liệu nhakhoaso. Để giúp bạn thực hiện việc này, tôi cần thêm một số thông tin:\n\n1. Bạn đã có kết nối đến cả hai cơ sở dữ liệu chưa?\n2. Bạn muốn chuyển những bảng dữ liệu nào cụ thể?\n3. Cấu trúc của hai cơ sở dữ liệu có tương đồng không?\n\nTrước tiên, hãy kiểm tra thư mục dự án để xem cấu trúc hiện tại:"},{"type":"toolCall","toolCallId":"toolu_01NEiyp6apA4nqSFwG4Q7UQF","isHidden":false,"title":"","statusText":"Viewed root folder","status":"SUCCESS","context":{"files":[{"fsPath":"/home/huong","path":"","displayPath":""}]}},{"type":"text","text":"Tôi thấy cả hai thư mục qtcsdl và nhakhoaso trong dự án của bạn. Hãy kiểm tra cấu trúc cơ sở dữ liệu của cả hai để hiểu rõ hơn:"},{"type":"toolCall","toolCallId":"toolu_018uEMfDA1UVp9sJU9rHrwsa","isHidden":false,"title":"","statusText":"Viewed file","status":"SUCCESS","context":{"files":[{"fsPath":"/home/huong/qtcsdl/app.py","path":"qtcsdl/app.py","displayPath":"qtcsdl/app.py"}]}},{"type":"text","text":"Hãy xem file help.py để hiểu cách kết nối đến cơ sở dữ liệu của qtcsdl:"},{"type":"toolCall","toolCallId":"toolu_01CxJ9Z7NTQjFJYkBRJqoF3h","isHidden":false,"title":"","statusText":"Viewed file","status":"SUCCESS","context":{"files":[{"fsPath":"/home/huong/qtcsdl/help.py","path":"qtcsdl/help.py","displayPath":"qtcsdl/help.py"}]}},{"type":"text","text":"Bây giờ hãy xem cấu trúc cơ sở dữ liệu của nhakhoaso:"},{"type":"toolCall","toolCallId":"toolu_016mnd8xJyoUU3vK28w9NNWV","isHidden":false,"title":"","statusText":"Viewed file","status":"SUCCESS","context":{"files":[{"fsPath":"/home/huong/nhakhoaso/database/init_db.sql","path":"nhakhoaso/database/init_db.sql","displayPath":"nhakhoaso/database/init_db.sql"}]}},{"type":"text","text":"Hãy xem cách kết nối đến cơ sở dữ liệu của nhakhoaso:"},{"type":"toolCall","toolCallId":"toolu_018zG84ZeMYT3Y2v9xkKa8Y2","isHidden":false,"title":"","statusText":"Viewed file","status":"SUCCESS","context":{"files":[{"fsPath":"/home/huong/nhakhoaso/database/db.py","path":"nhakhoaso/database/db.py","displayPath":"nhakhoaso/database/db.py"}]}},{"type":"text","text":"Hãy xem cấu hình cơ sở dữ liệu của nhakhoaso:"},{"type":"toolCall","toolCallId":"toolu_01Rid7F8CyZSPnAH38bWHam6","isHidden":false,"title":"","statusText":"Viewed file","status":"SUCCESS","context":{"files":[{"fsPath":"/home/huong/nhakhoaso/config.py","path":"nhakhoaso/config.py","displayPath":"nhakhoaso/config.py"}]}},{"type":"text","text":"Bây giờ, tôi sẽ tạo một script để chuyển dữ liệu từ cơ sở dữ liệu QuanLyGiaSu sang cơ sở dữ liệu nhakhoaso. Dựa trên phân tích, tôi thấy:\n\n1. QuanLyGiaSu sử dụng MySQL với các bảng: PHUHUYNH, GIASU, GIAODICH, LOPHOC\n2. nhakhoaso sử dụng SQLite với các bảng: BENHNHAN, BACSI, DICHVU, LICHHEN, PHIEUKHAM\n\nTôi sẽ tạo một script để chuyển dữ liệu từ QuanLyGiaSu sang nhakhoaso, với ánh xạ như sau:\n- PHUHUYNH -> BENHNHAN\n- GIASU -> BACSI"},{"type":"toolCall","toolCallId":"toolu_014YRSbYtXb5KxhnXsVXYnQ2","isHidden":false,"title":"","statusText":"Change generated","status":"SUCCESS","context":{"files":[{"fsPath":"/home/huong/chuyen_du_lieu.py","path":"chuyen_du_lieu.py","displayPath":"chuyen_du_lieu.py"}]}},{"type":"codeHunk","lineBasedDiff":"--- chuyen_du_lieu.py\n+++ chuyen_du_lieu.py\n@@ -0,0 +1,192 @@\n+import mysql.connector\n+import sqlite3\n+import os\n+import sys\n+import datetime\n+import re\n+\n+# Thêm thư mục gốc vào sys.path để import các module cần thiết\n+sys.path.append(os.path.dirname(os.path.abspath(__file__)))\n+from qtcsdl.help import get_connection as get_mysql_connection\n+from nhakhoaso.database.db import get_connection as get_sqlite_connection\n+\n+def dict_factory(cursor, row):\n+    \"\"\"\n+    Chuyển đổi kết quả truy vấn thành dictionary\n+    \"\"\"\n+    d = {}\n+    for idx, col in enumerate(cursor.description):\n+        value = row[idx]\n+        # Chuyển đổi datetime.date thành datetime.datetime\n+        if isinstance(value, str) and len(value) == 10 and value[4] == \"-\" and value[7] == \"-\":\n+            try:\n+                value = datetime.datetime.strptime(value, \"%Y-%m-%d\")\n+            except ValueError:\n+                pass\n+        d[col[0]] = value\n+    return d\n+\n+def get_all_phuhuynh():\n+    \"\"\"\n+    Lấy tất cả dữ liệu từ bảng PHUHUYNH trong MySQL\n+    \"\"\"\n+    try:\n+        conn = get_mysql_connection()\n+        cursor = conn.cursor(dictionary=True)\n+        cursor.execute(\"SELECT * FROM PHUHUYNH\")\n+        result = cursor.fetchall()\n+        cursor.close()\n+        conn.close()\n+        return result\n+    except Exception as e:\n+        print(f\"Lỗi khi lấy dữ liệu PHUHUYNH: {e}\")\n+        return []\n+\n+def get_all_giasu():\n+    \"\"\"\n+    Lấy tất cả dữ liệu từ bảng GIASU trong MySQL\n+    \"\"\"\n+    try:\n+        conn = get_mysql_connection()\n+        cursor = conn.cursor(dictionary=True)\n+        cursor.execute(\"SELECT * FROM GIASU\")\n+        result = cursor.fetchall()\n+        cursor.close()\n+        conn.close()\n+        return result\n+    except Exception as e:\n+        print(f\"Lỗi khi lấy dữ liệu GIASU: {e}\")\n+        return []\n+\n+def get_next_benhnhan_id(sqlite_conn):\n+    \"\"\"\n+    Lấy mã bệnh nhân tiếp theo\n+    \"\"\"\n+    cursor = sqlite_conn.cursor()\n+    cursor.execute(\"SELECT MAX(MaBN) as max_id FROM BENHNHAN\")\n+    result = cursor.fetchone()\n+    \n+    if result and result['max_id']:\n+        # Lấy số từ mã bệnh nhân cuối cùng và tăng lên 1\n+        last_id = int(result['max_id'][2:])\n+        new_id = f\"BN{(last_id + 1):05d}\"\n+    else:\n+        new_id = \"BN00001\"\n+    \n+    return new_id\n+\n+def get_next_bacsi_id(sqlite_conn):\n+    \"\"\"\n+    Lấy mã bác sĩ tiếp theo\n+    \"\"\"\n+    cursor = sqlite_conn.cursor()\n+    cursor.execute(\"SELECT MAX(MaBS) as max_id FROM BACSI\")\n+    result = cursor.fetchone()\n+    \n+    if result and result['max_id']:\n+        # Lấy số từ mã bác sĩ cuối cùng và tăng lên 1\n+        last_id = int(result['max_id'][2:])\n+        new_id = f\"BS{(last_id + 1):08d}\"\n+    else:\n+        new_id = \"BS00000001\"\n+    \n+    return new_id\n+\n+def insert_benhnhan(sqlite_conn, benhnhan_data):\n+    \"\"\"\n+    Chèn dữ liệu vào bảng BENHNHAN trong SQLite\n+    \"\"\"\n+    cursor = sqlite_conn.cursor()\n+    \n+    # Kiểm tra số điện thoại đã tồn tại chưa\n+    cursor.execute(\"SELECT COUNT(*) as count FROM BENHNHAN WHERE Sdt = ?\", (benhnhan_data['SoDT'],))\n+    result = cursor.fetchone()\n+    \n+    if result and result['count'] > 0:\n+        print(f\"Bệnh nhân với số điện thoại {benhnhan_data['SoDT']} đã tồn tại, bỏ qua.\")\n+        return\n+    \n+    # Lấy mã bệnh nhân mới\n+    ma_bn = get_next_benhnhan_id(sqlite_conn)\n+    \n+    # Chuẩn bị dữ liệu\n+    ho_ten = benhnhan_data['HoTen']\n+    sdt = benhnhan_data['SoDT']\n+    \n+    # Mặc định cho ngày sinh và giới tính\n+    ngay_sinh = datetime.date(1990, 1, 1)  # Mặc định\n+    gioi_tinh = \"Nam\"  # Mặc định\n+    \n+    # Chèn dữ liệu\n+    cursor.execute(\n+        \"INSERT INTO BENHNHAN (MaBN, HoTen, NgaySinh, GioiTinh, Sdt) VALUES (?, ?, ?, ?, ?)\",\n+        (ma_bn, ho_ten, ngay_sinh, gioi_tinh, sdt)\n+    )\n+    \n+    sqlite_conn.commit()\n+    print(f\"Đã chèn bệnh nhân: {ho_ten} với mã {ma_bn}\")\n+\n+def insert_bacsi(sqlite_conn, bacsi_data):\n+    \"\"\"\n+    Chèn dữ liệu vào bảng BACSI trong SQLite\n+    \"\"\"\n+    cursor = sqlite_conn.cursor()\n+    \n+    # Kiểm tra số điện thoại đã tồn tại chưa\n+    cursor.execute(\"SELECT COUNT(*) as count FROM BACSI WHERE Sdt = ?\", (bacsi_data['SoDT'],))\n+    result = cursor.fetchone()\n+    \n+    if result and result['count'] > 0:\n+        print(f\"Bác sĩ với số điện thoại {bacsi_data['SoDT']} đã tồn tại, bỏ qua.\")\n+        return\n+    \n+    # Lấy mã bác sĩ mới\n+    ma_bs = get_next_bacsi_id(sqlite_conn)\n+    \n+    # Chuẩn bị dữ liệu\n+    ho_ten = bacsi_data['HoTen']\n+    sdt = bacsi_data['SoDT']\n+    \n+    # Chèn dữ liệu\n+    cursor.execute(\n+        \"INSERT INTO BACSI (MaBS, HoTen, Sdt) VALUES (?, ?, ?)\",\n+        (ma_bs, ho_ten, sdt)\n+    )\n+    \n+    sqlite_conn.commit()\n+    print(f\"Đã chèn bác sĩ: {ho_ten} với mã {ma_bs}\")\n+\n+def chuyen_du_lieu():\n+    \"\"\"\n+    Chuyển dữ liệu từ MySQL sang SQLite\n+    \"\"\"\n+    try:\n+        # Lấy dữ liệu từ MySQL\n+        ds_phuhuynh = get_all_phuhuynh()\n+        ds_giasu = get_all_giasu()\n+        \n+        # Kết nối đến SQLite\n+        sqlite_conn = get_sqlite_connection()\n+        \n+        # Chuyển dữ liệu PHUHUYNH sang BENHNHAN\n+        print(f\"Bắt đầu chuyển {len(ds_phuhuynh)} phụ huynh sang bệnh nhân...\")\n+        for ph in ds_phuhuynh:\n+            insert_benhnhan(sqlite_conn, ph)\n+        \n+        # Chuyển dữ liệu GIASU sang BACSI\n+        print(f\"Bắt đầu chuyển {len(ds_giasu)} gia sư sang bác sĩ...\")\n+        for gs in ds_giasu:\n+            insert_bacsi(sqlite_conn, gs)\n+        \n+        # Đóng kết nối\n+        sqlite_conn.close()\n+        \n+        print(\"Chuyển dữ liệu hoàn tất!\")\n+        \n+    except Exception as e:\n+        print(f\"Lỗi khi chuyển dữ liệu: {e}\")\n+        import traceback\n+        traceback.print_exc()\n+\n+if __name__ == \"__main__\":\n+    chuyen_du_lieu()","refToolCallId":"toolu_014YRSbYtXb5KxhnXsVXYnQ2"},{"type":"text","text":"Bây giờ, tôi sẽ tạo một script để kiểm tra dữ liệu đã được chuyển thành công hay chưa:"},{"type":"toolCall","toolCallId":"toolu_018oNvUCTSTjAB7jmzpDWSUE","isHidden":false,"title":"","statusText":"Change generated","status":"SUCCESS","context":{"files":[{"fsPath":"/home/huong/kiem_tra_du_lieu.py","path":"kiem_tra_du_lieu.py","displayPath":"kiem_tra_du_lieu.py"}]}},{"type":"codeHunk","lineBasedDiff":"--- kiem_tra_du_lieu.py\n+++ kiem_tra_du_lieu.py\n@@ -0,0 +1,95 @@\n+import sys\n+import os\n+\n+# Thêm thư mục gốc vào sys.path để import các module cần thiết\n+sys.path.append(os.path.dirname(os.path.abspath(__file__)))\n+from qtcsdl.help import get_connection as get_mysql_connection\n+from nhakhoaso.database.db import get_connection as get_sqlite_connection\n+\n+def count_records_mysql():\n+    \"\"\"\n+    Đếm số lượng bản ghi trong các bảng của MySQL\n+    \"\"\"\n+    try:\n+        conn = get_mysql_connection()\n+        cursor = conn.cursor()\n+        \n+        # Đếm số lượng phụ huynh\n+        cursor.execute(\"SELECT COUNT(*) FROM PHUHUYNH\")\n+        ph_count = cursor.fetchone()[0]\n+        \n+        # Đếm số lượng gia sư\n+        cursor.execute(\"SELECT COUNT(*) FROM GIASU\")\n+        gs_count = cursor.fetchone()[0]\n+        \n+        cursor.close()\n+        conn.close()\n+        \n+        return {\n+            \"PHUHUYNH\": ph_count,\n+            \"GIASU\": gs_count\n+        }\n+    except Exception as e:\n+        print(f\"Lỗi khi đếm bản ghi MySQL: {e}\")\n+        return {\n+            \"PHUHUYNH\": 0,\n+            \"GIASU\": 0\n+        }\n+\n+def count_records_sqlite():\n+    \"\"\"\n+    Đếm số lượng bản ghi trong các bảng của SQLite\n+    \"\"\"\n+    try:\n+        conn = get_sqlite_connection()\n+        cursor = conn.cursor()\n+        \n+        # Đếm số lượng bệnh nhân\n+        cursor.execute(\"SELECT COUNT(*) as count FROM BENHNHAN\")\n+        bn_count = cursor.fetchone()['count']\n+        \n+        # Đếm số lượng bác sĩ\n+        cursor.execute(\"SELECT COUNT(*) as count FROM BACSI\")\n+        bs_count = cursor.fetchone()['count']\n+        \n+        conn.close()\n+        \n+        return {\n+            \"BENHNHAN\": bn_count,\n+            \"BACSI\": bs_count\n+        }\n+    except Exception as e:\n+        print(f\"Lỗi khi đếm bản ghi SQLite: {e}\")\n+        return {\n+            \"BENHNHAN\": 0,\n+            \"BACSI\": 0\n+        }\n+\n+def main():\n+    \"\"\"\n+    Hàm chính để kiểm tra dữ liệu\n+    \"\"\"\n+    print(\"Kiểm tra số lượng bản ghi trong cơ sở dữ liệu:\")\n+    print(\"-\" * 50)\n+    \n+    # Đếm bản ghi trong MySQL\n+    mysql_counts = count_records_mysql()\n+    print(\"MySQL (QuanLyGiaSu):\")\n+    print(f\"- PHUHUYNH: {mysql_counts['PHUHUYNH']} bản ghi\")\n+    print(f\"- GIASU: {mysql_counts['GIASU']} bản ghi\")\n+    print()\n+    \n+    # Đếm bản ghi trong SQLite\n+    sqlite_counts = count_records_sqlite()\n+    print(\"SQLite (nhakhoaso):\")\n+    print(f\"- BENHNHAN: {sqlite_counts['BENHNHAN']} bản ghi\")\n+    print(f\"- BACSI: {sqlite_counts['BACSI']} bản ghi\")\n+    print()\n+    \n+    # So sánh\n+    print(\"So sánh:\")\n+    print(f\"- PHUHUYNH -> BENHNHAN: {mysql_counts['PHUHUYNH']} -> {sqlite_counts['BENHNHAN']}\")\n+    print(f\"- GIASU -> BACSI: {mysql_counts['GIASU']} -> {sqlite_counts['BACSI']}\")\n+\n+if __name__ == \"__main__\":\n+    main()","refToolCallId":"toolu_018oNvUCTSTjAB7jmzpDWSUE"},{"type":"text","text":"Bây giờ, hãy thực hiện việc chuyển dữ liệu:"},{"type":"toolCall","toolCallId":"toolu_017xbTtRPcxcvG2kjdLbf7zN","isHidden":true,"title":"","statusText":"","status":"IN_PROGRESS"},{"type":"codePatch","diffs":[{"path":"kiem_tra_du_lieu.py","patch":"@@ -0,0 +1,2671 @@\n+import sys%0Aimport os%0A%0A# Th%C3%AAm th%C6%B0 m%E1%BB%A5c g%E1%BB%91c v%C3%A0o sys.path %C4%91%E1%BB%83 import c%C3%A1c module c%E1%BA%A7n thi%E1%BA%BFt%0Asys.path.append(os.path.dirname(os.path.abspath(__file__)))%0Afrom qtcsdl.help import get_connection as get_mysql_connection%0Afrom nhakhoaso.database.db import get_connection as get_sqlite_connection%0A%0Adef count_records_mysql():%0A    %22%22%22%0A    %C4%90%E1%BA%BFm s%E1%BB%91 l%C6%B0%E1%BB%A3ng b%E1%BA%A3n ghi trong c%C3%A1c b%E1%BA%A3ng c%E1%BB%A7a MySQL%0A    %22%22%22%0A    try:%0A        conn = get_mysql_connection()%0A        cursor = conn.cursor()%0A        %0A        # %C4%90%E1%BA%BFm s%E1%BB%91 l%C6%B0%E1%BB%A3ng ph%E1%BB%A5 huynh%0A        cursor.execute(%22SELECT COUNT(*) FROM PHUHUYNH%22)%0A        ph_count = cursor.fetchone()%5B0%5D%0A        %0A        # %C4%90%E1%BA%BFm s%E1%BB%91 l%C6%B0%E1%BB%A3ng gia s%C6%B0%0A        cursor.execute(%22SELECT COUNT(*) FROM GIASU%22)%0A        gs_count = cursor.fetchone()%5B0%5D%0A        %0A        cursor.close()%0A        conn.close()%0A        %0A        return %7B%0A            %22PHUHUYNH%22: ph_count,%0A            %22GIASU%22: gs_count%0A        %7D%0A    except Exception as e:%0A        print(f%22L%E1%BB%97i khi %C4%91%E1%BA%BFm b%E1%BA%A3n ghi MySQL: %7Be%7D%22)%0A        return %7B%0A            %22PHUHUYNH%22: 0,%0A            %22GIASU%22: 0%0A        %7D%0A%0Adef count_records_sqlite():%0A    %22%22%22%0A    %C4%90%E1%BA%BFm s%E1%BB%91 l%C6%B0%E1%BB%A3ng b%E1%BA%A3n ghi trong c%C3%A1c b%E1%BA%A3ng c%E1%BB%A7a SQLite%0A    %22%22%22%0A    try:%0A        conn = get_sqlite_connection()%0A        cursor = conn.cursor()%0A        %0A        # %C4%90%E1%BA%BFm s%E1%BB%91 l%C6%B0%E1%BB%A3ng b%E1%BB%87nh nh%C3%A2n%0A        cursor.execute(%22SELECT COUNT(*) as count FROM BENHNHAN%22)%0A        bn_count = cursor.fetchone()%5B'count'%5D%0A        %0A        # %C4%90%E1%BA%BFm s%E1%BB%91 l%C6%B0%E1%BB%A3ng b%C3%A1c s%C4%A9%0A        cursor.execute(%22SELECT COUNT(*) as count FROM BACSI%22)%0A        bs_count = cursor.fetchone()%5B'count'%5D%0A        %0A        conn.close()%0A        %0A        return %7B%0A            %22BENHNHAN%22: bn_count,%0A            %22BACSI%22: bs_count%0A        %7D%0A    except Exception as e:%0A        print(f%22L%E1%BB%97i khi %C4%91%E1%BA%BFm b%E1%BA%A3n ghi SQLite: %7Be%7D%22)%0A        return %7B%0A            %22BENHNHAN%22: 0,%0A            %22BACSI%22: 0%0A        %7D%0A%0Adef main():%0A    %22%22%22%0A    H%C3%A0m ch%C3%ADnh %C4%91%E1%BB%83 ki%E1%BB%83m tra d%E1%BB%AF li%E1%BB%87u%0A    %22%22%22%0A    print(%22Ki%E1%BB%83m tra s%E1%BB%91 l%C6%B0%E1%BB%A3ng b%E1%BA%A3n ghi trong c%C6%A1 s%E1%BB%9F d%E1%BB%AF li%E1%BB%87u:%22)%0A    print(%22-%22 * 50)%0A    %0A    # %C4%90%E1%BA%BFm b%E1%BA%A3n ghi trong MySQL%0A    mysql_counts = count_records_mysql()%0A    print(%22MySQL (QuanLyGiaSu):%22)%0A    print(f%22- PHUHUYNH: %7Bmysql_counts%5B'PHUHUYNH'%5D%7D b%E1%BA%A3n ghi%22)%0A    print(f%22- GIASU: %7Bmysql_counts%5B'GIASU'%5D%7D b%E1%BA%A3n ghi%22)%0A    print()%0A    %0A    # %C4%90%E1%BA%BFm b%E1%BA%A3n ghi trong SQLite%0A    sqlite_counts = count_records_sqlite()%0A    print(%22SQLite (nhakhoaso):%22)%0A    print(f%22- BENHNHAN: %7Bsqlite_counts%5B'BENHNHAN'%5D%7D b%E1%BA%A3n ghi%22)%0A    print(f%22- BACSI: %7Bsqlite_counts%5B'BACSI'%5D%7D b%E1%BA%A3n ghi%22)%0A    print()%0A    %0A    # So s%C3%A1nh%0A    print(%22So s%C3%A1nh:%22)%0A    print(f%22- PHUHUYNH -%3E BENHNHAN: %7Bmysql_counts%5B'PHUHUYNH'%5D%7D -%3E %7Bsqlite_counts%5B'BENHNHAN'%5D%7D%22)%0A    print(f%22- GIASU -%3E BACSI: %7Bmysql_counts%5B'GIASU'%5D%7D -%3E %7Bsqlite_counts%5B'BACSI'%5D%7D%22)%0A%0Aif __name__ == %22__main__%22:%0A    main()\n","isNew":true,"isApplied":false,"isUnread":true},{"path":"chuyen_du_lieu.py","patch":"@@ -0,0 +1,5524 @@\n+import mysql.connector%0Aimport sqlite3%0Aimport os%0Aimport sys%0Aimport datetime%0Aimport re%0A%0A# Th%C3%AAm th%C6%B0 m%E1%BB%A5c g%E1%BB%91c v%C3%A0o sys.path %C4%91%E1%BB%83 import c%C3%A1c module c%E1%BA%A7n thi%E1%BA%BFt%0Asys.path.append(os.path.dirname(os.path.abspath(__file__)))%0Afrom qtcsdl.help import get_connection as get_mysql_connection%0Afrom nhakhoaso.database.db import get_connection as get_sqlite_connection%0A%0Adef dict_factory(cursor, row):%0A    %22%22%22%0A    Chuy%E1%BB%83n %C4%91%E1%BB%95i k%E1%BA%BFt qu%E1%BA%A3 truy v%E1%BA%A5n th%C3%A0nh dictionary%0A    %22%22%22%0A    d = %7B%7D%0A    for idx, col in enumerate(cursor.description):%0A        value = row%5Bidx%5D%0A        # Chuy%E1%BB%83n %C4%91%E1%BB%95i datetime.date th%C3%A0nh datetime.datetime%0A        if isinstance(value, str) and len(value) == 10 and value%5B4%5D == %22-%22 and value%5B7%5D == %22-%22:%0A            try:%0A                value = datetime.datetime.strptime(value, %22%25Y-%25m-%25d%22)%0A            except ValueError:%0A                pass%0A        d%5Bcol%5B0%5D%5D = value%0A    return d%0A%0Adef get_all_phuhuynh():%0A    %22%22%22%0A    L%E1%BA%A5y t%E1%BA%A5t c%E1%BA%A3 d%E1%BB%AF li%E1%BB%87u t%E1%BB%AB b%E1%BA%A3ng PHUHUYNH trong MySQL%0A    %22%22%22%0A    try:%0A        conn = get_mysql_connection()%0A        cursor = conn.cursor(dictionary=True)%0A        cursor.execute(%22SELECT * FROM PHUHUYNH%22)%0A        result = cursor.fetchall()%0A        cursor.close()%0A        conn.close()%0A        return result%0A    except Exception as e:%0A        print(f%22L%E1%BB%97i khi l%E1%BA%A5y d%E1%BB%AF li%E1%BB%87u PHUHUYNH: %7Be%7D%22)%0A        return %5B%5D%0A%0Adef get_all_giasu():%0A    %22%22%22%0A    L%E1%BA%A5y t%E1%BA%A5t c%E1%BA%A3 d%E1%BB%AF li%E1%BB%87u t%E1%BB%AB b%E1%BA%A3ng GIASU trong MySQL%0A    %22%22%22%0A    try:%0A        conn = get_mysql_connection()%0A        cursor = conn.cursor(dictionary=True)%0A        cursor.execute(%22SELECT * FROM GIASU%22)%0A        result = cursor.fetchall()%0A        cursor.close()%0A        conn.close()%0A        return result%0A    except Exception as e:%0A        print(f%22L%E1%BB%97i khi l%E1%BA%A5y d%E1%BB%AF li%E1%BB%87u GIASU: %7Be%7D%22)%0A        return %5B%5D%0A%0Adef get_next_benhnhan_id(sqlite_conn):%0A    %22%22%22%0A    L%E1%BA%A5y m%C3%A3 b%E1%BB%87nh nh%C3%A2n ti%E1%BA%BFp theo%0A    %22%22%22%0A    cursor = sqlite_conn.cursor()%0A    cursor.execute(%22SELECT MAX(MaBN) as max_id FROM BENHNHAN%22)%0A    result = cursor.fetchone()%0A    %0A    if result and result%5B'max_id'%5D:%0A        # L%E1%BA%A5y s%E1%BB%91 t%E1%BB%AB m%C3%A3 b%E1%BB%87nh nh%C3%A2n cu%E1%BB%91i c%C3%B9ng v%C3%A0 t%C4%83ng l%C3%AAn 1%0A        last_id = int(result%5B'max_id'%5D%5B2:%5D)%0A        new_id = f%22BN%7B(last_id + 1):05d%7D%22%0A    else:%0A        new_id = %22BN00001%22%0A    %0A    return new_id%0A%0Adef get_next_bacsi_id(sqlite_conn):%0A    %22%22%22%0A    L%E1%BA%A5y m%C3%A3 b%C3%A1c s%C4%A9 ti%E1%BA%BFp theo%0A    %22%22%22%0A    cursor = sqlite_conn.cursor()%0A    cursor.execute(%22SELECT MAX(MaBS) as max_id FROM BACSI%22)%0A    result = cursor.fetchone()%0A    %0A    if result and result%5B'max_id'%5D:%0A        # L%E1%BA%A5y s%E1%BB%91 t%E1%BB%AB m%C3%A3 b%C3%A1c s%C4%A9 cu%E1%BB%91i c%C3%B9ng v%C3%A0 t%C4%83ng l%C3%AAn 1%0A        last_id = int(result%5B'max_id'%5D%5B2:%5D)%0A        new_id = f%22BS%7B(last_id + 1):08d%7D%22%0A    else:%0A        new_id = %22BS00000001%22%0A    %0A    return new_id%0A%0Adef insert_benhnhan(sqlite_conn, benhnhan_data):%0A    %22%22%22%0A    Ch%C3%A8n d%E1%BB%AF li%E1%BB%87u v%C3%A0o b%E1%BA%A3ng BENHNHAN trong SQLite%0A    %22%22%22%0A    cursor = sqlite_conn.cursor()%0A    %0A    # Ki%E1%BB%83m tra s%E1%BB%91 %C4%91i%E1%BB%87n tho%E1%BA%A1i %C4%91%C3%A3 t%E1%BB%93n t%E1%BA%A1i ch%C6%B0a%0A    cursor.execute(%22SELECT COUNT(*) as count FROM BENHNHAN WHERE Sdt = ?%22, (benhnhan_data%5B'SoDT'%5D,))%0A    result = cursor.fetchone()%0A    %0A    if result and result%5B'count'%5D %3E 0:%0A        print(f%22B%E1%BB%87nh nh%C3%A2n v%E1%BB%9Bi s%E1%BB%91 %C4%91i%E1%BB%87n tho%E1%BA%A1i %7Bbenhnhan_data%5B'SoDT'%5D%7D %C4%91%C3%A3 t%E1%BB%93n t%E1%BA%A1i, b%E1%BB%8F qua.%22)%0A        return%0A    %0A    # L%E1%BA%A5y m%C3%A3 b%E1%BB%87nh nh%C3%A2n m%E1%BB%9Bi%0A    ma_bn = get_next_benhnhan_id(sqlite_conn)%0A    %0A    # Chu%E1%BA%A9n b%E1%BB%8B d%E1%BB%AF li%E1%BB%87u%0A    ho_ten = benhnhan_data%5B'HoTen'%5D%0A    sdt = benhnhan_data%5B'SoDT'%5D%0A    %0A    # M%E1%BA%B7c %C4%91%E1%BB%8Bnh cho ng%C3%A0y sinh v%C3%A0 gi%E1%BB%9Bi t%C3%ADnh%0A    ngay_sinh = datetime.date(1990, 1, 1)  # M%E1%BA%B7c %C4%91%E1%BB%8Bnh%0A    gioi_tinh = %22Nam%22  # M%E1%BA%B7c %C4%91%E1%BB%8Bnh%0A    %0A    # Ch%C3%A8n d%E1%BB%AF li%E1%BB%87u%0A    cursor.execute(%0A        %22INSERT INTO BENHNHAN (MaBN, HoTen, NgaySinh, GioiTinh, Sdt) VALUES (?, ?, ?, ?, ?)%22,%0A        (ma_bn, ho_ten, ngay_sinh, gioi_tinh, sdt)%0A    )%0A    %0A    sqlite_conn.commit()%0A    print(f%22%C4%90%C3%A3 ch%C3%A8n b%E1%BB%87nh nh%C3%A2n: %7Bho_ten%7D v%E1%BB%9Bi m%C3%A3 %7Bma_bn%7D%22)%0A%0Adef insert_bacsi(sqlite_conn, bacsi_data):%0A    %22%22%22%0A    Ch%C3%A8n d%E1%BB%AF li%E1%BB%87u v%C3%A0o b%E1%BA%A3ng BACSI trong SQLite%0A    %22%22%22%0A    cursor = sqlite_conn.cursor()%0A    %0A    # Ki%E1%BB%83m tra s%E1%BB%91 %C4%91i%E1%BB%87n tho%E1%BA%A1i %C4%91%C3%A3 t%E1%BB%93n t%E1%BA%A1i ch%C6%B0a%0A    cursor.execute(%22SELECT COUNT(*) as count FROM BACSI WHERE Sdt = ?%22, (bacsi_data%5B'SoDT'%5D,))%0A    result = cursor.fetchone()%0A    %0A    if result and result%5B'count'%5D %3E 0:%0A        print(f%22B%C3%A1c s%C4%A9 v%E1%BB%9Bi s%E1%BB%91 %C4%91i%E1%BB%87n tho%E1%BA%A1i %7Bbacsi_data%5B'SoDT'%5D%7D %C4%91%C3%A3 t%E1%BB%93n t%E1%BA%A1i, b%E1%BB%8F qua.%22)%0A        return%0A    %0A    # L%E1%BA%A5y m%C3%A3 b%C3%A1c s%C4%A9 m%E1%BB%9Bi%0A    ma_bs = get_next_bacsi_id(sqlite_conn)%0A    %0A    # Chu%E1%BA%A9n b%E1%BB%8B d%E1%BB%AF li%E1%BB%87u%0A    ho_ten = bacsi_data%5B'HoTen'%5D%0A    sdt = bacsi_data%5B'SoDT'%5D%0A    %0A    # Ch%C3%A8n d%E1%BB%AF li%E1%BB%87u%0A    cursor.execute(%0A        %22INSERT INTO BACSI (MaBS, HoTen, Sdt) VALUES (?, ?, ?)%22,%0A        (ma_bs, ho_ten, sdt)%0A    )%0A    %0A    sqlite_conn.commit()%0A    print(f%22%C4%90%C3%A3 ch%C3%A8n b%C3%A1c s%C4%A9: %7Bho_ten%7D v%E1%BB%9Bi m%C3%A3 %7Bma_bs%7D%22)%0A%0Adef chuyen_du_lieu():%0A    %22%22%22%0A    Chuy%E1%BB%83n d%E1%BB%AF li%E1%BB%87u t%E1%BB%AB MySQL sang SQLite%0A    %22%22%22%0A    try:%0A        # L%E1%BA%A5y d%E1%BB%AF li%E1%BB%87u t%E1%BB%AB MySQL%0A        ds_phuhuynh = get_all_phuhuynh()%0A        ds_giasu = get_all_giasu()%0A        %0A        # K%E1%BA%BFt n%E1%BB%91i %C4%91%E1%BA%BFn SQLite%0A        sqlite_conn = get_sqlite_connection()%0A        %0A        # Chuy%E1%BB%83n d%E1%BB%AF li%E1%BB%87u PHUHUYNH sang BENHNHAN%0A        print(f%22B%E1%BA%AFt %C4%91%E1%BA%A7u chuy%E1%BB%83n %7Blen(ds_phuhuynh)%7D ph%E1%BB%A5 huynh sang b%E1%BB%87nh nh%C3%A2n...%22)%0A        for ph in ds_phuhuynh:%0A            insert_benhnhan(sqlite_conn, ph)%0A        %0A        # Chuy%E1%BB%83n d%E1%BB%AF li%E1%BB%87u GIASU sang BACSI%0A        print(f%22B%E1%BA%AFt %C4%91%E1%BA%A7u chuy%E1%BB%83n %7Blen(ds_giasu)%7D gia s%C6%B0 sang b%C3%A1c s%C4%A9...%22)%0A        for gs in ds_giasu:%0A            insert_bacsi(sqlite_conn, gs)%0A        %0A        # %C4%90%C3%B3ng k%E1%BA%BFt n%E1%BB%91i%0A        sqlite_conn.close()%0A        %0A        print(%22Chuy%E1%BB%83n d%E1%BB%AF li%E1%BB%87u ho%C3%A0n t%E1%BA%A5t!%22)%0A        %0A    except Exception as e:%0A        print(f%22L%E1%BB%97i khi chuy%E1%BB%83n d%E1%BB%AF li%E1%BB%87u: %7Be%7D%22)%0A        import traceback%0A        traceback.print_exc()%0A%0Aif __name__ == %22__main__%22:%0A    chuyen_du_lieu()\n","isNew":true,"isApplied":false,"isUnread":true}]},{"id":"4d798955-27db-478b-bbb8-c9d788309a59","type":"shellCommand","status":"CONFIRMATION","shell":"bash","command":"cd /home/huong && python chuyen_du_lieu.py","toolCallId":"toolu_017xbTtRPcxcvG2kjdLbf7zN","requiresConfirmation":true,"commandsRequiringConfirmation":[{"name":"python","arguments":["chuyen_du_lieu.py"]}]}],"context":{"author":"Coding Agent","operationId":"0cbdcd29-7d77-4ec9-969c-9598f4a3d3e6"},"isInternal":false}],"isAgent":true,"isCustomAgent":false,"isUnitTestsAgent":false,"autoApply":false}